var D=Object.defineProperty;var A=(h,e,t)=>e in h?D(h,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):h[e]=t;var N=(h,e,t)=>A(h,typeof e!="symbol"?e+"":e,t);import{ay as F,az as O,t as V,a0 as z,a as d,e as y,a1 as B,aA as H,ac as k,aB as w,X as I,D as U,a6 as _,aC as q,aD as L,K as T,aE as G,$ as v,aF as W,aG as Q}from"./babylon-5P2y78Su.js";import"./loaders-DK8ZgpeS.js";import"./gui-DR9feVN3.js";(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))i(o);new MutationObserver(o=>{for(const s of o)if(s.type==="childList")for(const n of s.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&i(n)}).observe(document,{childList:!0,subtree:!0});function t(o){const s={};return o.integrity&&(s.integrity=o.integrity),o.referrerPolicy&&(s.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?s.credentials="include":o.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function i(o){if(o.ep)return;o.ep=!0;const s=t(o);fetch(o.href,s)}})();const K=async()=>{let h=document.getElementById("renderCanvas");h||(console.log("Creating new canvas element"),h=document.createElement("canvas"),h.id="renderCanvas",h.style.width="100%",h.style.height="100%",h.style.touchAction="none",h.style.outline="none",document.body.appendChild(h));const e=new F(h,!0,{preserveDrawingBuffer:!0,stencil:!0,disableWebGL2Support:!1,powerPreference:"high-performance"});return console.log("Using WebGL engine"),window.addEventListener("resize",()=>{e.resize()}),h.addEventListener("webglcontextlost",t=>{console.error("WebGL context lost. Trying to restore..."),t.preventDefault(),setTimeout(()=>{e.engineInstrumentation.isDirty=!1,e.engineInstrumentation.lastStartDispatch=e.timeStep,e.engineInstrumentation.lastDispatch=e.timeStep,e.engineInstrumentation.lastClear=e.timeStep,window.location.reload()},1e3)}),{engine:e,canvas:h}},Y=h=>{const e=new O(h);e.autoClear=!0,e.autoClearDepthAndStencil=!0,e.skipFrustumClipping=!0,e.clearColor=new V(.5,.75,.95,1);const t=new z("hemisphericLight",new d(0,1,0),e);t.intensity=.8,t.diffuse=new y(1,1,1),t.groundColor=new y(.5,.5,.5);const i=new B("directionalLight",new d(.5,-1,.5),e);i.intensity=.6,i.diffuse=new y(1,1,1);const o={getShadowMap:()=>({renderList:[]}),addShadowCaster:()=>{},dispose:()=>{}},s=new H(e,10);return s.update(new d(0,0,0),new d(1,0,0),new d(0,1,0),new d(0,0,1)),s.xAxis&&s.xAxis.parent&&(s.xAxis.parent=null,s.yAxis.parent=null,s.zAxis.parent=null),{scene:e,shadowGenerator:o,axesViewer:s}};function Z(){return typeof crypto<"u"&&typeof crypto.randomUUID=="function"?crypto.randomUUID():"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(h){const e=Math.random()*16|0;return(h==="x"?e:e&3|8).toString(16)})}const P=class P{constructor(e,t=null,i={}){P.instanceCounter++,this.creationTime=new Date().toISOString(),this.instanceNumber=P.instanceCounter,this.id=Z(),this.uniqueId=`${this.constructor.name}_${this.instanceNumber}`,this.scene=e,this.options=i,this.rootNode=new k(this.uniqueId,e),this.initialValues={position:t?t.clone():null},t&&(this.rootNode.position=t),this.debug=i.debug||!1,this._isVisible=!0,this.debugLog(`Created ${this.constructor.name} at position (${(t==null?void 0:t.x.toFixed(2))||"null"}, ${(t==null?void 0:t.y.toFixed(2))||"null"}, ${(t==null?void 0:t.z.toFixed(2))||"null"})`)}getName(){let e=this.constructor.name;return e.endsWith("Model")&&(e=e.slice(0,-5)),e==="SingleCut"?"CUT":e.replace(/([A-Z])/g," $1").trim()}debugLog(...e){this.debug&&console.log(`[${this.constructor.name} Debug]`,...e)}updateLOD(e){}setVisible(e){this._isVisible=e,this.rootNode&&(this.rootNode.setEnabled(e),this.debugLog(`Set ${this.constructor.name} visibility to ${e}`))}isVisible(){return this._isVisible}getId(){return this.id}dispose(){this.rootNode&&(this.rootNode.dispose(),this.debugLog(`Disposed ${this.constructor.name}`))}logModelDetails(){if(console.group(`${this.constructor.name} Details`),console.log("Type:",this.constructor.name),this.initialValues&&(console.group("Initial Values"),this.initialValues.position&&console.log("Position:",{x:this.initialValues.position.x.toFixed(2),y:this.initialValues.position.y.toFixed(2),z:this.initialValues.position.z.toFixed(2)}),this.initialValues.radius!==void 0&&console.log("Radius:",this.initialValues.radius.toFixed(2)),this.initialValues.rotationAngle!==void 0&&console.log("Rotation:",this.initialValues.rotationAngle.toFixed(2)+"°"),console.groupEnd()),this.rootNode){console.group("Current Transform");const e=this.rootNode.position;console.log("Position:",{x:e.x.toFixed(2),y:e.y.toFixed(2),z:e.z.toFixed(2)});const t=this.rootNode.rotation;console.log("Rotation:",{x:(t.x*180/Math.PI).toFixed(2)+"°",y:(t.y*180/Math.PI).toFixed(2)+"°",z:(t.z*180/Math.PI).toFixed(2)+"°"}),console.log("Enabled:",this.rootNode.isEnabled()),console.groupEnd()}if(this.options&&(console.group("Options"),this.options.radius!==void 0&&console.log("Radius:",this.options.radius.toFixed(2)),this.options.outerRadius!==void 0&&console.log("Outer Radius:",this.options.outerRadius.toFixed(2)),this.options.innerRadius!==void 0&&console.log("Inner Radius:",this.options.innerRadius.toFixed(2)),this.options.singleCutRadius!==void 0&&console.log("SingleCut Radius:",this.options.singleCutRadius.toFixed(2)),this.options.rotationAngle!==void 0&&console.log("Rotation Angle:",this.options.rotationAngle.toFixed(2)+"°"),this.options.parent&&console.log("Parent:",this.options.parent.uniqueId||"Unknown"),console.groupEnd()),this.initialValues&&this.initialValues.position&&this.rootNode){console.group("Changes from Initial State");const e=this.initialValues.position,t=this.rootNode.position;console.log("Position Delta:",{x:(t.x-e.x).toFixed(2),y:(t.y-e.y).toFixed(2),z:(t.z-e.z).toFixed(2)}),this.initialValues.radius!==void 0&&this.options.radius!==void 0&&console.log("Radius Delta:",(this.options.radius-this.initialValues.radius).toFixed(2)),this.initialValues.rotationAngle!==void 0&&this.options.rotationAngle!==void 0&&console.log("Rotation Delta:",(this.options.rotationAngle-this.initialValues.rotationAngle).toFixed(2)+"°"),console.groupEnd()}console.groupEnd()}};N(P,"instanceCounter",0);let E=P;class X extends E{constructor(e,t=5e3,i=new d(0,0,0),o={}){super(e,i,{...o,name:"ground"}),this.size=t,this.mesh=null,this.createGround()}createGround(){this.debugLog("Creating ground mesh"),this.mesh=w.CreateGround("ground",{width:this.size,height:this.size,subdivisions:32},this.scene),this.mesh.position=new d(0,0,0),this.mesh.parent=this.rootNode;const e=new I("groundMaterial",this.scene);e.diffuseColor=new y(.2,.5,.2),e.specularColor=new y(0,0,0);const t=1024,i=new U("gridTexture",t,this.scene,!0),o=i.getContext();o.fillStyle="#366936",o.fillRect(0,0,t,t),o.lineWidth=2,o.strokeStyle="#488A48",o.lineWidth=4;const s=t/10;for(let n=0;n<=10;n++){const r=n*s;o.beginPath(),o.moveTo(0,r),o.lineTo(t,r),o.stroke(),o.beginPath(),o.moveTo(r,0),o.lineTo(r,t),o.stroke()}i.update(),i.uScale=this.size/100,i.vScale=this.size/100,e.diffuseTexture=i,e.useSpecularOverAlpha=!1,this.mesh.material=e,this.mesh.checkCollisions=!0,this.debugLog("Ground mesh created successfully")}getName(){return"Ground"}setVisible(e){super.setVisible(e),this.mesh&&(this.mesh.isVisible=e)}dispose(){this.mesh&&(this.mesh.dispose(),this.mesh=null),super.dispose()}}class $ extends E{constructor(e,t,i={}){super(e,t,i),this.childModels=[]}addChild(e){e&&e.rootNode&&(e.rootNode.parent=this.rootNode,this.childModels.push(e),this.debugLog(`Added child model: ${e.constructor.name}`))}addChildren(e){Array.isArray(e)&&e.forEach(t=>this.addChild(t))}getChildren(){return[...this.childModels]}setVisible(e){console.log(`CompositeModel.setVisible(${e}) called for ${this.constructor.name}`),super.setVisible(e),this.rootNode&&console.log(`${this.constructor.name} rootNode.isEnabled(): ${this.rootNode.isEnabled()}`),this.childModels.forEach(t=>{t&&typeof t.setVisible=="function"?t.setVisible(e):console.warn("Child model doesn't have setVisible method:",t)}),this.rootNode&&console.log(`${this.constructor.name} final rootNode.isEnabled(): ${this.rootNode.isEnabled()}`)}updateLOD(e){this.childModels.forEach(t=>{t.updateLOD(e)})}getAllMeshes(e=null){const t=[];return this.childModels.forEach(i=>{e&&i[e]&&Array.isArray(i[e])?t.push(...i[e]):i instanceof $&&t.push(...i.getAllMeshes(e))}),t}dispose(){this.childModels.forEach(e=>{e.dispose()}),this.childModels=[],super.dispose()}}class J extends E{constructor(e,t=new d(0,0,0),i={}){const o={height:1e3,radius:5,color:new y(.7,.7,.7),markerInterval:100,mainMarkerInterval:500,name:"pipe"};super(e,t,{...o,...i}),this.createPipe(),this.createHeightMarkers()}createPipe(){const e=w.CreateCylinder("pipe",{height:this.options.height,diameter:this.options.radius*2,tessellation:24},this.scene);e.position.y=this.options.height/2;const t=new I("pipeMaterial",this.scene);t.diffuseColor=this.options.color,t.specularColor=new y(.3,.3,.3),e.material=t,e.checkCollisions=!0,e.parent=this.rootNode,this.pipeMesh=e}createHeightMarkers(){const e=[],t=Math.floor(this.options.height/this.options.markerInterval)+1;for(let i=0;i<t;i++){const o=i*this.options.markerInterval;if(o===0)continue;const s=o%this.options.mainMarkerInterval===0,n=this.createRingMarker(this.options.radius+.2,s?.5:.2,s?new y(1,0,0):new y(1,1,0));if(n.position.y=o,s){const r=this.createHeightText(o,n);r.parent=this.rootNode}n.parent=this.rootNode,e.push(n)}this.markers=e}createRingMarker(e,t,i){const o=w.CreateTorus("heightMarker",{diameter:e*2,thickness:t,tessellation:32},this.scene),s=new I("ringMaterial",this.scene);return s.diffuseColor=i,s.specularColor=new y(.1,.1,.1),o.material=s,o}createHeightText(e,t){const i=w.CreatePlane("heightText",{width:10,height:2},this.scene);i.position=new d(this.options.radius+5,0,0);const o=new I("textMaterial",this.scene);return o.diffuseColor=new y(.8,.8,.8),o.backFaceCulling=!1,o.specularColor=new y(0,0,0),i.material=o,i.billboardMode=_.BILLBOARDMODE_ALL,i.isVisible=!1,i.parent=t,i}getName(){return"Pipe"}dispose(){this.pipeMesh&&this.pipeMesh.dispose(),this.markers&&this.markers.forEach(e=>e.dispose()),super.dispose()}setVisible(e){this._isVisible=e,console.log(`PipeModel setVisible called with ${e}`),this.rootNode&&(console.log(`Setting PipeModel rootNode enabled to ${e}`),this.rootNode.setEnabled(e)),this.pipeMesh&&(console.log(`Setting PipeModel pipeMesh visibility to ${e}`),this.pipeMesh.isVisible=e,this.pipeMesh.refreshBoundingInfo()),this.markers&&this.markers.forEach(t=>{t.isVisible=e}),this.pipeMesh&&console.log(`PipeModel after change: mesh visible=${this.pipeMesh.isVisible}, rootNode enabled=${this.rootNode?this.rootNode.isEnabled():"N/A"}`)}}class j extends E{constructor(e,t=new d(0,0,0),i={}){const o={height:1e3,width:50,depth:2,color:new y(.2,.6,.8),name:"panel"};super(e,t,{...o,...i}),this.initialRotation=null,this.panelIndex=-1,this.createPanel()}createPanel(){const e=w.CreateBox("panel",{height:this.options.height,width:this.options.width,depth:this.options.depth},this.scene);e.position.y=this.options.height/2;const t=new I("panelMaterial",this.scene);t.diffuseColor=this.options.color,t.specularColor=new y(.3,.3,.3),e.material=t,e.checkCollisions=!0,e.parent=this.rootNode,this.panelMesh=e}storeInitialRotation(){if(!this.initialRotation&&this.rootNode&&(this.initialRotation=this.rootNode.rotation.clone(),console.log(`Stored initial rotation for panel ${this.panelIndex+1}: (${this.radToDeg(this.initialRotation.x)}°, ${this.radToDeg(this.initialRotation.y)}°, ${this.radToDeg(this.initialRotation.z)}°)`),this.rotationState&&this.panelIndex>=0)){const e=this.rotationState.defaultAngles[this.panelIndex];console.log(`Panel ${this.panelIndex+1} default angle from shared state: ${e==null?void 0:e.toFixed(1)}°`)}}applyRotationDelta(e,t=!0){if(!this.rootNode)return;this.storeInitialRotation(),this.rotationState&&this.panelIndex>=0&&(this.rotationState.currentDelta=e,this.rotationState.defaultAngles&&this.rotationState.defaultAngles[this.panelIndex]!==void 0&&(this.rotationState.currentAngles[this.panelIndex]=this.rotationState.defaultAngles[this.panelIndex]+e,console.log(`Panel ${this.panelIndex+1} current angle in shared state updated to: ${this.rotationState.currentAngles[this.panelIndex].toFixed(1)}°`))),this.initialRotation?(this.rootNode.rotation=this.initialRotation.clone(),console.log(`Panel ${this.panelIndex+1} initial rotation: (${this.radToDeg(this.initialRotation.y)}°)`)):(console.warn(`Panel ${this.panelIndex+1} missing initial rotation, creating one`),this.initialRotation=new d(0,0,0),this.rootNode.rotation=this.initialRotation.clone());const i=e*Math.PI/180;let o=i;if(this.rotationState&&this.rotationState.defaultAngles&&this.panelIndex>=0){const s=this.rotationState.defaultAngles[this.panelIndex]||0;o=s*Math.PI/180+i,console.log(`Panel ${this.panelIndex+1} applying total rotation of ${this.radToDeg(o)}° (default ${s}° + delta ${e}°)`)}this.rootNode.rotation.y=o,console.log(`Panel ${this.panelIndex+1} rotation after update: Y=${this.radToDeg(this.rootNode.rotation.y)}°`),this.forceUpdate(t)}forceUpdate(e=!0){if(this.rootNode&&this.rootNode.computeWorldMatrix(!0),this.panelMesh&&(this.panelMesh.markAsDirty(),this.panelMesh.refreshBoundingInfo(),this.panelMesh.computeWorldMatrix(!0)),e&&this.scene&&this.scene.activeCamera)try{this.scene.render()}catch(t){console.warn(`PanelModel: Couldn't render scene, this is normal during initialization: ${t.message}`)}}getCurrentDelta(){return this.rotationState?this.rotationState.currentDelta:0}getCurrentTotalAngle(){if(this.rotationState&&this.panelIndex>=0){const e=this.rotationState.defaultAngles[this.panelIndex]||0,t=this.rotationState.currentDelta||0;return e+t}return this.rootNode?parseFloat(this.radToDeg(this.rootNode.rotation.y)):0}radToDeg(e){return(e*180/Math.PI).toFixed(1)}setVisible(e){this._isVisible=e,console.log(`PanelModel setVisible called with ${e}`),this.rootNode&&(console.log(`Setting PanelModel rootNode enabled to ${e}`),this.rootNode.setEnabled(e)),this.panelMesh&&(console.log(`Setting PanelModel panelMesh visibility to ${e}`),this.panelMesh.isVisible=e,this.panelMesh.refreshBoundingInfo()),this.panelMesh&&console.log(`PanelModel after change: mesh visible=${this.panelMesh.isVisible}, rootNode enabled=${this.rootNode?this.rootNode.isEnabled():"N/A"}`)}dispose(){this.panelMesh&&this.panelMesh.dispose(),super.dispose()}getName(){return"Panel"}}class S extends ${constructor(e,t=new d(0,0,0),i={}){const o={cornerCount:6,radius:21,debug:!1,rotationAngle:0,parent:null};if(super(e,t,{...o,...i}),this.initialValues={...this.initialValues,radius:this.options.radius,rotationAngle:this.options.rotationAngle},this.setupTransformNodes(),this.options.rotationAngle!==0){const s=this.getRotation();s.angle=this.options.rotationAngle}}setupTransformNodes(){this.cornerNodes=[],this.sideNodes=[];const e=this.options.cornerCount;for(let t=0;t<e;t++){const i=this.calculateCornerPosition(t),o=`${this.uniqueId}_corner_${t}`,s=new k(o,this.scene);s.position=i,s.parent=this.rootNode,this.cornerNodes.push(s),this.debugLog(`Created corner node ${t} at position (${i.x.toFixed(2)}, ${i.y.toFixed(2)}, ${i.z.toFixed(2)})`)}for(let t=0;t<e;t++){const i=(t+1)%e,o=this.cornerNodes[t].position,s=this.cornerNodes[i].position,n=o.add(s).scale(.5),r=`${this.uniqueId}_side_${t}`,a=new k(r,this.scene);a.position=n,a.parent=this.rootNode;const l=n.normalize(),c=Math.atan2(l.z,l.x);a.rotation=new d(0,c,0),this.sideNodes.push(a),this.debugLog(`Created side node ${t} at position (${n.x.toFixed(2)}, ${n.y.toFixed(2)}, ${n.z.toFixed(2)})`)}}calculateCornerPosition(e){const t=this.options.cornerCount,i=e*2*Math.PI/t,o=this.options.radius*Math.cos(i),s=this.options.radius*Math.sin(i);return new d(o,0,s)}calculateSidePosition(e){const t=this.options.cornerCount,i=e,o=(e+1)%t,s=this.calculateCornerPosition(i),n=this.calculateCornerPosition(o);return s.add(n).scale(.5)}calculateSideDirection(e){return this.calculateSidePosition(e).normalize()}calculateCornerAngle(e,t){const i=this.options.cornerCount,o=e*2*Math.PI/i,s=t*2*Math.PI/i;return Math.abs(s-o)}calculateCornerDistance(e,t){const i=this.calculateCornerPosition(e),o=this.calculateCornerPosition(t);return d.Distance(i,o)}getSideLength(){return this.calculateCornerDistance(0,1)}getCornerToCornerDistance(){const t=this.options.cornerCount/2;return t%1!==0?this.options.radius*2:this.calculateCornerDistance(0,t)}getSideToSideDistance(){return this.options.radius*Math.sqrt(3)}updateRadius(e){if(this.options.radius===e)return;const t=this.options.radius;this.options.radius=e,this.debugLog(`Updating radius from ${t.toFixed(2)} to ${e.toFixed(2)}`),this.updateNodePositions()}updateNodePositions(){const e=this.options.cornerCount;for(let t=0;t<e;t++)if(this.cornerNodes[t]){const i=this.calculateCornerPosition(t);this.cornerNodes[t].position=i}for(let t=0;t<e;t++)if(this.sideNodes[t]){const i=(t+1)%e,o=this.cornerNodes[t].position,s=this.cornerNodes[i].position,n=o.add(s).scale(.5);this.sideNodes[t].position=n;const r=n.normalize(),a=Math.atan2(r.z,r.x);this.sideNodes[t].rotation=new d(0,a,0)}}getRotation(){return this._rotation||(this._rotation={angle:0,min:0,max:360,default:0}),this._rotation}getChildrenRotations(e=null){return null}getDefaultRadius(){return this.options.radius}getMinRadius(){return 10}getMaxRadius(){return 100}getDefaultRotation(){return this.options.rotationAngle}getMinRotation(){return 0}getMaxRotation(){return 360}radToDeg(e){return(e*180/Math.PI).toFixed(2)+"°"}degToRad(e){return e*Math.PI/180}calculateSideDistance(){return this.options.radius*Math.sqrt(3)}getRadius(){return this._radius||(this._radius={value:this.options.radius,min:this.getMinRadius(),max:this.getMaxRadius(),default:this.getDefaultRadius()},Object.defineProperty(this._radius,"value",{get:()=>this.options.radius,set:e=>{this.options.radius!==e&&this.updateRadius(e)}})),this._radius}dispose(){this.cornerNodes&&(this.cornerNodes.forEach(e=>{e&&e.dispose()}),this.cornerNodes=[]),this.sideNodes&&(this.sideNodes.forEach(e=>{e&&e.dispose()}),this.sideNodes=[]),super.dispose()}getChildrenRadii(e=null){return null}}class x extends S{constructor(e,t=new d(0,0,0),i={}){const o={pipeRadius:1,pipeHeight:1e3,pipeColor:new y(.7,.7,.7),panelWidth:50,panelHeight:930,panelDepth:.1,panelColor:new y(.2,.6,.8),skipPanels:!1};super(e,t,{...o,...i}),this.createModels(),this.debugLog("SingleCUT model created with ID:",this.id)}createModels(){this.pipes=[],this.panels=[],this.initializePanelRotations(),this.debugLog("Creating SingleCUT model with",this.options.cornerCount,"pipes and panels"),this.createPipes(),this.options.skipPanels?this.debugLog("Skipping panel creation as requested by skipPanels option"):this.createPanels(),this.debugLog("SingleCUT model creation complete"),this.debugLog("Panel rotation state after initialization:",JSON.stringify(this.panelRotations))}initializePanelRotations(){const e=this.options.cornerCount||6;this.rotations=[],this.panelRotations={currentDelta:0,defaultAngles:[],currentAngles:[]};for(let t=0;t<e;t++){const o=this.getDefaultPanelRotation(t)*180/Math.PI,s={id:`panel-${t}`,name:`Panel ${t+1}`,index:t,baseRotation:o,value:o,delta:0};this.rotations.push(s),this.panelRotations.defaultAngles[t]=o,this.panelRotations.currentAngles[t]=o}this.debugLog("Panel rotations initialized:"),this.debugLog(`- Created ${this.rotations.length} rotation entries`),this.debugLog(`- Default angles: ${this.rotations.map(t=>t.value.toFixed(1)+"°").join(", ")}`)}createPipes(){const e=this.options.cornerCount;for(let t=0;t<e;t++){const i=this.cornerNodes[t].position.clone();this.debugLog(`Pipe ${t+1}: Position (${i.x.toFixed(2)}, 0, ${i.z.toFixed(2)})`);const o=new J(this.scene,i,{height:this.options.pipeHeight,radius:this.options.pipeRadius,color:this.options.pipeColor});if(o.rootNode.parent=this.rootNode,this.pipes.push(o),this.options.parent&&typeof this.options.parent.isElementPermanentlyHidden=="function"){const s=this.options.parent.childModels?this.options.parent.childModels.indexOf(this):-1;s!==-1&&this.options.parent.isElementPermanentlyHidden(s,"pipe",t)&&(this.debugLog(`Permanently hiding Pipe #${t+1} as requested by parent model`),o.pipeMesh.isVisible=!1,o.rootNode.setEnabled(!1))}}}createPanels(){const e=this.options.cornerCount;(!this.rotations||this.rotations.length===0)&&(this.debugLog("Panel rotation data not initialized, doing it now"),this.initializePanelRotations());for(let t=0;t<e;t++){const i=(t+1)%e;this.debugLog(`Creating panel ${t+1} between pipes ${t+1} and ${i+1}`);const o=this.cornerNodes[t].position.clone(),s=this.cornerNodes[i].position.clone(),n=this.calculatePanelTransform(t,o,s),r=this.rotations[t];this.debugLog(`Panel #${t+1} default angle: ${r.baseRotation.toFixed(1)}°`);const a=this.createPanel(n.position,n.rotation,n.width,t);if(a.rotationState=this.panelRotations,a.panelIndex=t,a.rotationData=r,this.panels.push(a),this.options.parent&&typeof this.options.parent.isElementPermanentlyHidden=="function"){const l=this.options.parent.childModels?this.options.parent.childModels.indexOf(this):-1;l!==-1&&this.options.parent.isElementPermanentlyHidden(l,"panel",t)&&(this.debugLog(`Permanently hiding Panel #${t+1} as requested by parent model`),a.panelMesh.isVisible=!1,a.rootNode.setEnabled(!1))}}this.debugLog("Panel rotation state after panel creation:"),this.debugLog("  Default angles:",this.panelRotations.defaultAngles.map(t=>t.toFixed(1)+"°").join(", ")),this.debugLog("  Current angles:",this.panelRotations.currentAngles.map(t=>t.toFixed(1)+"°").join(", ")),this.debugLog("  Current delta:",this.panelRotations.currentDelta+"°")}calculatePanelTransform(e,t,i){const o=t.add(i).scale(.5);o.y=70;const s=i.subtract(t).normalize(),n=Math.atan2(s.z,s.x),r=new d(0,n,0),a=d.Distance(t,i),l=this.options.pipeRadius||.5,c=a-2*l;return this.debugLog(`Panel Transform: Position (${o.x.toFixed(2)}, ${o.y.toFixed(2)}, ${o.z.toFixed(2)}), Rotation Y: ${this.radToDeg(n)}, Width: ${c.toFixed(2)}`),{position:o,rotation:r,width:c}}createPanel(e,t,i,o){const s=this.rotations[o],n=new j(this.scene,e,{height:this.options.panelHeight,width:i,depth:this.options.panelDepth,color:this.options.pipeColor,rotation:s});n.rootNode.rotation=t.clone(),this.debugLog(`Panel ${o+1}: Initial pipe-to-pipe rotation: X: ${this.radToDeg(t.x)}, Y: ${this.radToDeg(t.y)}, Z: ${this.radToDeg(t.z)}`),n.rotation=s,n.rotationState=this.panelRotations,n.panelIndex=o;const r=n.rootNode.rotation;return this.debugLog(`Panel ${o+1}: Position (${e.x.toFixed(2)}, ${e.y.toFixed(2)}, ${e.z.toFixed(2)}), Rotation X: ${this.radToDeg(r.x)}, Y: ${this.radToDeg(r.y)}, Z: ${this.radToDeg(r.z)}`),n.rootNode.parent=this.rootNode,n}updateLOD(e){const t=d.Distance(e,this.rootNode.position),i=2e3,o=1e3;this.pipes.forEach(s=>{const n=t<i;s.pipeMesh.isVisible=n,s.markers&&s.markers.forEach(r=>{r.isVisible=t<o})}),this.panels.forEach(s=>{s.panelMesh&&(s.panelMesh.isVisible=t<i)})}updateRadius(e){if(this.options.radius===e)return;const t=this.options.radius;super.updateRadius(e),this.debugLog(`SingleCut ${this.id}: Updated radius from ${t.toFixed(2)} to ${e.toFixed(2)} (initial: ${this.initialValues.radius.toFixed(2)}, total delta: ${(e-this.initialValues.radius).toFixed(2)})`),this.dispose(!1),this.createModels()}dispose(e=!0){this.pipes&&(this.pipes.forEach(t=>t.dispose()),this.pipes=[]),this.panels&&(this.panels.forEach(t=>t.dispose()),this.panels=[]),e&&super.dispose()}getChildren(){return[]}getDefaultPanelRotation(e){const t=this.options.cornerCount||6;if(t===6){const i=e%t;if(i===0||i===3)return Math.PI/3;if(i===1||i===4)return 0;if(i===2||i===5)return 2*Math.PI/3}return e*2*Math.PI/t}onRender(e=!0){if(!this.panels||this.panels.length===0){this.debugLog("No panels to initialize");return}this.debugLog("Initializing panels with default rotations");const t=this.panelRotations.currentDelta||0;this.panels.forEach((i,o)=>{if(i&&i.rootNode){!i.initialRotation&&i.storeInitialRotation&&i.storeInitialRotation();const s=this.rotations[o];t!==0&&(s.delta=t,s.value=s.baseRotation+t),this.debugLog(`Panel #${o+1}: Applying rotation of ${s.value.toFixed(1)}° (base: ${s.baseRotation.toFixed(1)}°, delta: ${s.delta}°)`);const n=s.value*Math.PI/180;i.rootNode.rotation.y=n,i.setVisible&&i.setVisible(!0),i.panelMesh&&(i.panelMesh.isVisible=!0),e&&this.scene&&i.rootNode&&i.rootNode.freezeWorldMatrix()}}),e&&this.scene&&this.scene.onBeforeRenderObservable.addOnce(()=>{this.panels.forEach(i=>{i&&i.rootNode&&i.rootNode.unfreezeWorldMatrix()})}),this.debugLog("Panel initialization complete")}getChildrenRotations(){return this.rotations}applyModelRotation(e){const t=e*Math.PI/180;this.rootNode&&(this.rootNode.rotation.y=t),this.options.rotationAngle=e,this.debugLog(`Applied ${this.getName()} rotation: ${e}°`)}getRotation(){return this._rotation||(this._rotation={angle:this.options.rotationAngle||0,min:0,max:360,default:this.options.rotationAngle||0},Object.defineProperty(this._rotation,"angle",{get:()=>this._rotationAngle||0,set:e=>{this._rotationAngle=e,this.applyModelRotation(e)}})),this._rotation}getName(){return"CUT"}}class ee extends S{constructor(e,t=new d(0,0,0),i={}){const o={debug:!1,singleCutRadius:21,cornerRotationAngle:30,radius:36.37,visibility:{all:!0}};super(e,t,{...o,...i}),this.cornerRotations=[],this.createModels()}createModels(){this.debugLog("Creating LayerOneRingModel with 6 corner SingleCUTs");const{singleCutRadius:e,cornerRotationAngle:t}=this.options;this.cornerCuts=[];for(let i=0;i<6;i++)this.cornerRotations.push({id:`corner-${i}`,name:`Corner ${i+1}`,index:i,angle:t,min:0,max:360,default:t});for(let i=0;i<6;i++){const o=this.cornerNodes[i].position.clone(),s=new x(this.scene,o,{radius:e,rotationAngle:this.cornerRotations[i].angle,parent:this,debug:this.options.debug});this.cornerCuts.push(s),this.addChild(s)}this.debugLog("LayerOneRingModel creation complete")}getRadius(){return this._radius||(this._radius={value:this.options.radius,min:this.getMinRadius(),max:this.getMaxRadius(),default:this.getDefaultRadius()},Object.defineProperty(this._radius,"value",{get:()=>this.options.radius,set:e=>{this.options.radius!==e&&this.updateRadius(e)}})),this._radius}getChildrenRotations(){return this.cornerRotations}updateRadius(e){super.updateRadius(e);for(let t=0;t<this.cornerCuts.length;t++){const i=this.cornerCuts[t],o=this.cornerNodes[t];i&&i.rootNode&&o&&(i.rootNode.position=o.position.clone())}this.debugLog(`Updated radius to ${e}`)}getName(){return"Layer One Ring"}onRender(){this.debugLog("Initializing LayerOneRingModel"),this.cornerCuts.forEach(e=>{e&&typeof e.onRender=="function"&&e.onRender()}),this.debugLog("LayerOneRingModel initialization complete")}dispose(){this.cornerCuts=[],this.cornerRotations=[],super.dispose()}}class te extends S{constructor(e,t=new d(0,0,0),i={}){const o={debug:!1,singleCutRadius:21,cornerRotationAngle:30,sideRotationAngle:30,radius:72.8,visibility:{all:!0}};super(e,t,{...o,...i}),this.cornerRotations=[],this.sideRotations=[],this.createModels()}createModels(){this.debugLog("Creating LayerTwoRingModel with 6 corner SingleCUTs and 6 side SingleCUTs");const{singleCutRadius:e,cornerRotationAngle:t,sideRotationAngle:i}=this.options;this.cornerCuts=[],this.sideCuts=[];for(let o=0;o<6;o++)this.cornerRotations.push({id:`corner-${o}`,name:`Corner ${o+1}`,index:o,angle:t,min:0,max:360,default:t});for(let o=0;o<6;o++)this.sideRotations.push({id:`side-${o}`,name:`Side ${o+1}`,index:o,angle:i,min:0,max:360,default:i});for(let o=0;o<6;o++){const s=this.cornerNodes[o].position.clone(),n=new x(this.scene,s,{radius:e,rotationAngle:this.cornerRotations[o].angle,parent:this,debug:this.options.debug});this.cornerCuts.push(n),this.addChild(n)}for(let o=0;o<6;o++){const s=(o+1)%6,n=this.cornerNodes[o].position.clone(),r=this.cornerNodes[s].position.clone(),a=n.add(r).scale(.5),l=new x(this.scene,a,{radius:e,rotationAngle:this.sideRotations[o].angle,parent:this,debug:this.options.debug});this.sideCuts.push(l),this.addChild(l)}this.debugLog("LayerTwoRingModel creation complete")}getRadius(){return this._radius||(this._radius={value:this.options.radius,min:this.getMinRadius(),max:this.getMaxRadius(),default:this.getDefaultRadius()},Object.defineProperty(this._radius,"value",{get:()=>this.options.radius,set:e=>{this.options.radius!==e&&this.updateRadius(e)}})),this._radius}getChildrenRotations(){return[...this.cornerRotations,...this.sideRotations]}updateRadius(e){super.updateRadius(e);for(let t=0;t<this.cornerCuts.length;t++){const i=this.cornerCuts[t],o=this.cornerNodes[t];i&&i.rootNode&&o&&(i.rootNode.position=o.position.clone())}for(let t=0;t<this.sideCuts.length;t++){const i=this.sideCuts[t],o=this.sideNodes[t];i&&i.rootNode&&o&&(i.rootNode.position=o.position.clone())}this.debugLog(`Updated radius to ${e}`)}getName(){return"Layer Two Ring"}getMinRadius(){return 40}getMaxRadius(){return 120}getDefaultRadius(){return 72.8}onRender(){this.debugLog("Initializing LayerTwoRingModel"),this.cornerCuts.forEach(e=>{e&&typeof e.onRender=="function"&&e.onRender()}),this.sideCuts.forEach(e=>{e&&typeof e.onRender=="function"&&e.onRender()}),this.debugLog("LayerTwoRingModel initialization complete")}dispose(){this.cornerCuts=[],this.cornerRotations=[],this.sideCuts=[],this.sideRotations=[],super.dispose()}}class ie extends S{constructor(e,t=new d(0,0,0),i={}){const o={debug:!1,singleCutRadius:21,cornerRotationAngle:30,sideRotationAngle:30,radius:109.2,sidesPerCorner:2,visibility:{all:!0}};super(e,t,{...o,...i}),this.cornerRotations=[],this.sideRotations=[],this.createModels()}createModels(){this.debugLog("Creating LayerThreeRingModel with 6 corner SingleCUTs and 12 side SingleCUTs");const{singleCutRadius:e,cornerRotationAngle:t,sideRotationAngle:i,sidesPerCorner:o}=this.options;this.cornerCuts=[],this.sideCuts=[];for(let s=0;s<6;s++)this.cornerRotations.push({id:`corner-${s}`,name:`Corner ${s+1}`,index:s,angle:t,min:0,max:360,default:t});for(let s=0;s<6*o;s++)this.sideRotations.push({id:`side-${s}`,name:`Side ${s+1}`,index:s,angle:i,min:0,max:360,default:i});for(let s=0;s<6;s++){const n=this.cornerNodes[s].position.clone(),r=new x(this.scene,n,{radius:e,rotationAngle:this.cornerRotations[s].angle,parent:this,debug:this.options.debug});this.cornerCuts.push(r),this.addChild(r)}for(let s=0;s<6;s++){const n=(s+1)%6,r=this.cornerNodes[s].position.clone(),a=this.cornerNodes[n].position.clone();for(let l=1;l<=o;l++){const c=l/(o+1),p=new d(r.x*(1-c)+a.x*c,r.y*(1-c)+a.y*c,r.z*(1-c)+a.z*c),f=s*o+(l-1),g=new x(this.scene,p,{radius:e,rotationAngle:this.sideRotations[f].angle,parent:this,debug:this.options.debug});this.sideCuts.push(g),this.addChild(g)}}this.debugLog(`LayerThreeRingModel creation complete with ${this.cornerCuts.length} corners and ${this.sideCuts.length} sides`)}getRadius(){return this._radius||(this._radius={value:this.options.radius,min:this.getMinRadius(),max:this.getMaxRadius(),default:this.getDefaultRadius()},Object.defineProperty(this._radius,"value",{get:()=>this.options.radius,set:e=>{this.options.radius!==e&&this.updateRadius(e)}})),this._radius}getChildrenRotations(){return[...this.cornerRotations,...this.sideRotations]}updateRadius(e){super.updateRadius(e);for(let o=0;o<this.cornerCuts.length;o++){const s=this.cornerCuts[o],n=this.cornerNodes[o];s&&s.rootNode&&n&&(s.rootNode.position=n.position.clone())}const{sidesPerCorner:t}=this.options;let i=0;for(let o=0;o<6;o++){const s=(o+1)%6,n=this.cornerNodes[o].position.clone(),r=this.cornerNodes[s].position.clone();for(let a=1;a<=t;a++)if(i<this.sideCuts.length){const l=this.sideCuts[i];if(l&&l.rootNode){const c=a/(t+1),p=new d(n.x*(1-c)+r.x*c,n.y*(1-c)+r.y*c,n.z*(1-c)+r.z*c);l.rootNode.position=p}i++}}this.debugLog(`Updated radius to ${e}`)}getName(){return"Layer Three Ring"}getMinRadius(){return 80}getMaxRadius(){return 180}getDefaultRadius(){return 109.2}onRender(){this.debugLog("Initializing LayerThreeRingModel"),this.cornerCuts.forEach(e=>{e&&typeof e.onRender=="function"&&e.onRender()}),this.sideCuts.forEach(e=>{e&&typeof e.onRender=="function"&&e.onRender()}),this.debugLog("LayerThreeRingModel initialization complete")}dispose(){this.cornerCuts=[],this.cornerRotations=[],this.sideCuts=[],this.sideRotations=[],super.dispose()}}class oe extends S{constructor(e,t=new d(0,0,0),i={}){const o={debug:!1,singleCutRadius:21,cornerRotationAngle:30,sideRotationAngle:30,radius:145.6,sidesPerCorner:3,visibility:{all:!0}};super(e,t,{...o,...i}),this.cornerRotations=[],this.sideRotations=[],this.createModels()}createModels(){this.debugLog("Creating LayerFourRingModel with 6 corner SingleCUTs and 18 side SingleCUTs");const{singleCutRadius:e,cornerRotationAngle:t,sideRotationAngle:i,sidesPerCorner:o}=this.options;this.cornerCuts=[],this.sideCuts=[];for(let s=0;s<6;s++)this.cornerRotations.push({id:`corner-${s}`,name:`Corner ${s+1}`,index:s,angle:t,min:0,max:360,default:t});for(let s=0;s<6*o;s++)this.sideRotations.push({id:`side-${s}`,name:`Side ${s+1}`,index:s,angle:i,min:0,max:360,default:i});for(let s=0;s<6;s++){const n=this.cornerNodes[s].position.clone(),r=new x(this.scene,n,{radius:e,rotationAngle:this.cornerRotations[s].angle,parent:this,debug:this.options.debug});this.cornerCuts.push(r),this.addChild(r)}for(let s=0;s<6;s++){const n=(s+1)%6,r=this.cornerNodes[s].position.clone(),a=this.cornerNodes[n].position.clone();for(let l=1;l<=o;l++){const c=l/(o+1),p=new d(r.x*(1-c)+a.x*c,r.y*(1-c)+a.y*c,r.z*(1-c)+a.z*c),f=s*o+(l-1),g=new x(this.scene,p,{radius:e,rotationAngle:this.sideRotations[f].angle,parent:this,debug:this.options.debug});this.sideCuts.push(g),this.addChild(g)}}this.debugLog(`LayerFourRingModel creation complete with ${this.cornerCuts.length} corners and ${this.sideCuts.length} sides`)}getRadius(){return this._radius||(this._radius={value:this.options.radius,min:this.getMinRadius(),max:this.getMaxRadius(),default:this.getDefaultRadius()},Object.defineProperty(this._radius,"value",{get:()=>this.options.radius,set:e=>{this.options.radius!==e&&this.updateRadius(e)}})),this._radius}getChildrenRotations(){return[...this.cornerRotations,...this.sideRotations]}updateRadius(e){super.updateRadius(e);for(let o=0;o<this.cornerCuts.length;o++){const s=this.cornerCuts[o],n=this.cornerNodes[o];s&&s.rootNode&&n&&(s.rootNode.position=n.position.clone())}const{sidesPerCorner:t}=this.options;let i=0;for(let o=0;o<6;o++){const s=(o+1)%6,n=this.cornerNodes[o].position.clone(),r=this.cornerNodes[s].position.clone();for(let a=1;a<=t;a++)if(i<this.sideCuts.length){const l=this.sideCuts[i];if(l&&l.rootNode){const c=a/(t+1),p=new d(n.x*(1-c)+r.x*c,n.y*(1-c)+r.y*c,n.z*(1-c)+r.z*c);l.rootNode.position=p}i++}}this.debugLog(`Updated radius to ${e}`)}getName(){return"Layer Four Ring"}getMinRadius(){return 120}getMaxRadius(){return 220}getDefaultRadius(){return 145.6}onRender(){this.debugLog("Initializing LayerFourRingModel"),this.cornerCuts.forEach(e=>{e&&typeof e.onRender=="function"&&e.onRender()}),this.sideCuts.forEach(e=>{e&&typeof e.onRender=="function"&&e.onRender()}),this.debugLog("LayerFourRingModel initialization complete")}dispose(){this.cornerCuts=[],this.cornerRotations=[],this.sideCuts=[],this.sideRotations=[],super.dispose()}}class se extends ${constructor(e,t=new d(0,0,0),i={}){const o={debug:!1,singleCutRadius:21,rotationAngle:30,visibility:{ring:!0}};super(e,t,{...o,...i}),this.createModels()}createModels(){this.debugLog("Creating Ring Model with central CUT and outer rings");const{singleCutRadius:e,rotationAngle:t}=this.options,i=new x(this.scene,new d(0,0,0),{radius:e,rotationAngle:t,parent:this,debug:this.options.debug});this.centralCut=i,this.addChild(i);const o=new ee(this.scene,new d(0,0,0),{singleCutRadius:e,cornerRotationAngle:t,parent:this,debug:this.options.debug});this.layerOneRing=o,this.addChild(o);const s=new te(this.scene,new d(0,0,0),{singleCutRadius:e,cornerRotationAngle:t,sideRotationAngle:t,parent:this,debug:this.options.debug});this.layerTwoRing=s,this.addChild(s);const n=new ie(this.scene,new d(0,0,0),{singleCutRadius:e,cornerRotationAngle:t,sideRotationAngle:t,parent:this,debug:this.options.debug});this.layerThreeRing=n,this.addChild(n);const r=new oe(this.scene,new d(0,0,0),{singleCutRadius:e,cornerRotationAngle:t,sideRotationAngle:t,parent:this,debug:this.options.debug});this.layerFourRing=r,this.addChild(r),this.debugLog("Ring Model creation complete")}getName(){return"Ring"}onRender(){this.debugLog("Initializing Ring Model"),this.centralCut&&typeof this.centralCut.onRender=="function"&&this.centralCut.onRender(),this.layerOneRing&&typeof this.layerOneRing.onRender=="function"&&this.layerOneRing.onRender(),this.layerTwoRing&&typeof this.layerTwoRing.onRender=="function"&&this.layerTwoRing.onRender(),this.layerThreeRing&&typeof this.layerThreeRing.onRender=="function"&&this.layerThreeRing.onRender(),this.layerFourRing&&typeof this.layerFourRing.onRender=="function"&&this.layerFourRing.onRender(),this.layerFiveRing&&typeof this.layerFiveRing.onRender=="function"&&this.layerFiveRing.onRender(),this.debugLog("Ring Model initialization complete")}updateRadiusSettings(e,t){this.options.singleCutRadius=t;const i=this.layerOneRing?this.layerOneRing.getDefaultRadius():36.4,o=this.layerTwoRing?this.layerTwoRing.getDefaultRadius():72.8,s=this.layerThreeRing?this.layerThreeRing.getDefaultRadius():109.2,n=this.layerFourRing?this.layerFourRing.getDefaultRadius():145.6,r=this.layerFiveRing?this.layerFiveRing.getDefaultRadius():182,a=e/r;if(this.layerOneRing){const l=this.layerOneRing.getRadius();l&&(l.value=i*a)}if(this.layerTwoRing){const l=this.layerTwoRing.getRadius();l&&(l.value=o*a)}if(this.layerThreeRing){const l=this.layerThreeRing.getRadius();l&&(l.value=s*a)}if(this.layerFourRing){const l=this.layerFourRing.getRadius();l&&(l.value=n*a)}if(this.layerFiveRing){const l=this.layerFiveRing.getRadius();l&&(l.value=e)}this.debugLog(`Updated radius settings: outerRadius=${e}, singleCutRadius=${t}, scaleFactor=${a}`)}}const m={ORBIT:"Orbit",FIRST_PERSON:"First Person",FLIGHT:"Flight"};class ne{constructor(e,t,i={}){this.scene=e,this.canvas=t,this.options={initialPosition:new d(0,100,200),zoomScaling:5,minDistance:20,maxDistance:500,...i},this.currentMode=m.ORBIT,this.currentCamera=null,this.cameraMoveSpeed=1,this.cameraRotationSpeed=.005,this.minHeightAboveGround=2,this.collisionDistance=4,this.transitionDuration=1e3,this.isTransitioning=!1,this.keys={w:!1,a:!1,s:!1,d:!1,space:!1,shift:!1},this.maxPipeHeight=1500,this.showCollisionRays=!1,this.useDebugUI=!1,this.setupCameras(),this.setActiveCamera(this.currentMode),this.setupControls(),this.collisionRayHelpers=[]}setupCameras(){this.orbitCamera=new q("orbitCamera",-Math.PI/2,Math.PI/3,this.options.maxDistance/2,new d(0,0,0),this.scene),this.orbitCamera.lowerRadiusLimit=this.options.minDistance||10,this.orbitCamera.upperRadiusLimit=this.options.maxDistance||2e3,this.orbitCamera.wheelDeltaPercentage=this.options.zoomScaling?this.options.zoomScaling/500:.01,this.orbitCamera.panningSensibility=50,this.orbitCamera.checkCollisions=!1,this.orbitCamera.lowerBetaLimit=.1,this.orbitCamera.upperBetaLimit=Math.PI/2-.1,this.firstPersonCamera=new L("firstPersonCamera",this.options.initialPosition||new d(0,this.minHeightAboveGround,-50),this.scene),this.firstPersonCamera.fov=1.2,this.firstPersonCamera.minZ=.1,this.firstPersonCamera.checkCollisions=!0,this.firstPersonCamera.ellipsoid=new d(2,2,2),this.firstPersonCamera.applyGravity=!0,this.firstPersonCamera.keysUp=[],this.firstPersonCamera.keysDown=[],this.firstPersonCamera.keysLeft=[],this.firstPersonCamera.keysRight=[],this.flightCamera=new L("flightCamera",new d(0,100,-100),this.scene),this.flightCamera.fov=1.2,this.flightCamera.minZ=.1,this.flightCamera.checkCollisions=!0,this.flightCamera.ellipsoid=new d(2,2,2),this.flightCamera.applyGravity=!1,this.flightCamera.keysUp=[],this.flightCamera.keysDown=[],this.flightCamera.keysLeft=[],this.flightCamera.keysRight=[]}setupControls(){this.scene.onKeyboardObservable.add(e=>{const t=e.event;if(e.type===T.KEYDOWN)switch(t.code){case"KeyW":this.keys.w=!0;break;case"KeyA":this.keys.a=!0;break;case"KeyS":this.keys.s=!0;break;case"KeyD":this.keys.d=!0;break;case"Space":this.keys.space=!0;break;case"ShiftLeft":case"ShiftRight":this.keys.shift=!0;break;case"KeyM":this.toggleCameraMode();break;case"KeyH":document.body.classList.toggle("show-controls");break}else if(e.type===T.KEYUP)switch(t.code){case"KeyW":this.keys.w=!1;break;case"KeyA":this.keys.a=!1;break;case"KeyS":this.keys.s=!1;break;case"KeyD":this.keys.d=!1;break;case"Space":this.keys.space=!1;break;case"ShiftLeft":case"ShiftRight":this.keys.shift=!1;break}}),this.canvas.addEventListener("click",()=>{(this.currentMode===m.FIRST_PERSON||this.currentMode===m.FLIGHT)&&(this.canvas.requestPointerLock=this.canvas.requestPointerLock||this.canvas.msRequestPointerLock||this.canvas.mozRequestPointerLock||this.canvas.webkitRequestPointerLock,this.canvas.requestPointerLock&&this.canvas.requestPointerLock())}),this.useDebugUI&&this.scene.registerBeforeRender(()=>this.updateCameraInfo()),this.scene.registerBeforeRender(()=>this.updateCameraMovement())}updateCameraInfo(){if(!document.getElementById("positionText"))return;const t=this.currentCamera.position,i=document.getElementById("positionText");i&&(i.textContent=`${t.x.toFixed(1)}, ${t.y.toFixed(1)}, ${t.z.toFixed(1)}`);const o=t.y,s=document.getElementById("heightText");s&&(s.textContent=`${o.toFixed(1)}m`);const n=o/this.maxPipeHeight*100,r=document.getElementById("heightPercentText");r&&(r.textContent=`${n.toFixed(1)}%`);const a=document.getElementById("cameraModeText");a&&(a.textContent=this.currentMode)}updateCameraMovement(){if(this.currentMode===m.ORBIT||!this.currentCamera)return;const e=this.currentCamera,t=e.position.clone();let i=d.Zero();if(this.keys.w){const o=this.currentCamera.getDirection(d.Forward());i.addInPlace(o)}if(this.keys.s){const o=this.currentCamera.getDirection(d.Backward());i.addInPlace(o)}if(this.keys.a){const o=this.currentCamera.getDirection(d.Left());i.addInPlace(o)}if(this.keys.d){const o=this.currentCamera.getDirection(d.Right());i.addInPlace(o)}if(this.keys.space&&i.addInPlace(d.Up()),this.keys.shift&&i.addInPlace(d.Down()),i.length()>0){i.normalize(),i.scaleInPlace(this.cameraMoveSpeed);const o=t.add(i);o.y<this.minHeightAboveGround&&(o.y=this.minHeightAboveGround),(this.options.pipes&&this.options.pipes.length>0?this.checkCollisions(t,o):!1)||(e.position=o)}}checkCollisions(e,t){if(!this.options.pipes||this.options.pipes.length===0)return!1;const i=t.subtract(e),o=i.length(),s=new G(e,i.normalize(),o),n=this.options.pipes.some(r=>!r||!r.isEnabled()||!r.isPickable?!1:s.intersectsMesh(r).hit);return this.showCollisionRays&&this.visualizeCollisionRay(s,n),n}visualizeCollisionRay(e,t){this.collisionRayHelpers.forEach(s=>s.dispose()),this.collisionRayHelpers=[];const i=new w.CreateLines("rayHelper",{points:[e.origin,e.origin.add(e.direction.scale(e.length))],updatable:!1},this.scene),o=new I("rayMaterial",this.scene);o.emissiveColor=t?y.Red():y.Green(),i.material=o,this.collisionRayHelpers.push(i)}setActiveCamera(e){let t;switch(e){case m.ORBIT:t=this.orbitCamera;break;case m.FIRST_PERSON:t=this.firstPersonCamera;break;case m.FLIGHT:t=this.flightCamera;break;default:t=this.orbitCamera;break}this.currentCamera=t,this.scene.activeCamera=t,t.attachControl(this.canvas,!0)}toggleCameraMode(){if(this.isTransitioning)return;let e;switch(this.currentMode){case m.ORBIT:e=m.FIRST_PERSON;break;case m.FIRST_PERSON:e=m.FLIGHT;break;case m.FLIGHT:e=m.ORBIT;break;default:e=m.ORBIT;break}this.transitionToMode(e)}transitionToMode(e){this.isTransitioning=!0;const t=this.currentCamera;t.detachControl(this.canvas);let i;switch(e){case m.ORBIT:i=this.orbitCamera,this.orbitCamera.setTarget(new d(0,0,0));break;case m.FIRST_PERSON:if(i=this.firstPersonCamera,this.currentMode===m.ORBIT){const p=this.orbitCamera.target.subtract(this.orbitCamera.position).normalize(),f=this.orbitCamera.position.add(p.scale(50));f.y=Math.max(f.y,this.minHeightAboveGround),this.firstPersonCamera.position=f,this.firstPersonCamera.setTarget(f.add(p))}break;case m.FLIGHT:if(i=this.flightCamera,this.currentMode===m.FIRST_PERSON){const p=this.firstPersonCamera.getDirection(d.Forward()),f=this.firstPersonCamera.position.clone();f.y+=50,this.flightCamera.position=f,this.flightCamera.setTarget(f.add(p))}break}let o=performance.now();const s=t.position.clone(),n=t.rotationQuaternion?t.rotationQuaternion.clone():v.RotationYawPitchRoll(t.rotation.y,t.rotation.x,t.rotation.z),r=i.position.clone(),a=i.rotationQuaternion?i.rotationQuaternion.clone():v.RotationYawPitchRoll(i.rotation.y,i.rotation.x,i.rotation.z),l=t.clone("transitionCamera");l.position=s,l.rotationQuaternion=n,this.scene.activeCamera=l;const c=()=>{const f=performance.now()-o,g=Math.min(f/this.transitionDuration,1),u=(M=>M<.5?2*M*M:-1+(4-2*M)*M)(g),R=d.Lerp(s,r,u),b=v.Slerp(n,a,u);l.position=R,l.rotationQuaternion=b,g<1?requestAnimationFrame(c):(this.currentMode=e,this.setActiveCamera(e),this.isTransitioning=!1,l.dispose())};c()}getCurrentCameraName(){return this.currentMode}}class re{constructor(e,t={}){this.cameraController=e,this.options=t,this.models=t.models||[],this.createContainers(),this.createControlsInfoPanel(),this.initUI(),this.models&&this.models.length>0&&this.createModelControls(),t.showDebugInfo&&this.createDebugInfoView(),t.showRadiusControl&&this.createRadiusControl()}initUI(){this.createCameraToggleButton(),!this.options.showOnlyDebugToggle&&(this.options.sceneEditor&&(this.sceneEditor=this.options.sceneEditor),document.addEventListener("keydown",e=>{e.code==="KeyH"&&document.body.classList.toggle("show-controls")}))}createContainers(){if(document.getElementById("toggleButtons"))this.toggleButtonsContainer=document.getElementById("toggleButtons");else{const e=document.createElement("div");e.id="toggleButtons",e.style.position="absolute",e.style.bottom="20px",e.style.right="20px",e.style.display="flex",e.style.flexDirection="row",e.style.gap="10px",e.style.zIndex="100",document.body.appendChild(e),this.toggleButtonsContainer=e}if(!this.options.showOnlyDebugToggle)if(document.getElementById("controlPanels"))this.controlPanelsContainer=document.getElementById("controlPanels");else{const e=document.createElement("div");e.id="controlPanels",e.style.position="absolute",e.style.top="50px",e.style.left="10px",e.style.display="flex",e.style.flexDirection="column",e.style.gap="10px",e.style.zIndex="100",document.body.appendChild(e),this.controlPanelsContainer=e}}createModelControls(){if(this.options.showOnlyDebugToggle)return;const{DebugInfoView:e}=this.options.controlClasses||{};e&&this.options.showDebugInfo&&(this.debugInfoView=new e(this.models,{app:this.options.app}))}createDebugInfoView(){const{DebugInfoView:e}=this.options.controlClasses||{};e&&(this.debugInfoView=new e({isVisible:!0,cameraController:this.cameraController,app:this.options.app}))}createRadiusControl(){const{RadiusControl:e}=this.options.controlClasses||{};e&&(this.radiusControl=new e(this.models,{isVisible:!0,app:this.options.app,includeChildren:!0}))}createControlsInfoPanel(){if(this.options.showOnlyDebugToggle)return;const e=this.controlPanelsContainer||document.getElementById("controlPanels");if(!e){console.error("Control panels container not found");return}this.controlsInfo=document.createElement("div"),this.controlsInfo.id="controlsInfo",this.controlsInfo.style.backgroundColor="rgba(0, 0, 0, 0.5)",this.controlsInfo.style.padding="10px",this.controlsInfo.style.borderRadius="5px",this.controlsInfo.style.color="#ffffff",this.controlsInfo.style.display="none",this.controlsInfo.style.zIndex="100",this.controlsInfo.style.position="absolute",this.controlsInfo.style.top="10px",this.controlsInfo.style.left="10px",this.controlsInfo.style.maxWidth="400px",this.controlsInfo.innerHTML=`
            <h3 style="margin-top: 0; margin-bottom: 10px;">Controls</h3>
            <p><strong>Show/Hide Controls:</strong> Press H</p>
            <p><strong>Camera Mode:</strong> Press Tab</p>
            <p><strong>Movement (First Person/Flight):</strong> WASD</p>
            <p><strong>Up/Down (Flight):</strong> Space/Shift</p>
            <p><strong>Look Around:</strong> Click and Drag</p>
            <p><strong>Zoom (Orbit):</strong> Mouse Wheel</p>
            <p><strong>Scene Editor:</strong> Press E</p>
        `,e.appendChild(this.controlsInfo)}createCameraToggleButton(){try{const e=this.toggleButtonsContainer||document.getElementById("toggleButtons");if(!e){console.error("Toggle buttons container not found");return}const t=document.createElement("button");t.textContent="Camera",t.className="control-button",t.style.backgroundColor="#333",t.style.color="#fff",t.style.border="none",t.style.padding="8px 16px",t.style.borderRadius="4px",t.style.cursor="pointer",t.style.fontWeight="bold",t.style.fontSize="14px",t.style.width="120px",t.style.textAlign="center",t.style.transition="background-color 0.3s",t.style.boxShadow="0 2px 4px rgba(0,0,0,0.3)",t.addEventListener("mouseenter",()=>{t.style.backgroundColor="#444"}),t.addEventListener("mouseleave",()=>{t.style.backgroundColor="#333"}),t.addEventListener("click",()=>{this.cameraController&&(this.cameraController.toggleCameraMode(),t.textContent=`Camera: ${this.cameraController.getCurrentCameraName()}`)}),this.cameraController&&(t.textContent=`Camera: ${this.cameraController.getCurrentCameraName()}`),e.appendChild(t),this.cameraButton=t}catch(e){console.error("Error creating camera toggle button:",e)}}update(){this.cameraButton&&this.cameraController&&(this.cameraButton.textContent=`Camera: ${this.cameraController.getCurrentCameraName()}`),this.debugInfoView&&this.debugInfoView.update(),this.radiusControl&&this.radiusControl.update()}}class ae{constructor(e,t){this.scene=e,this.sceneObjects={},Array.isArray(t)?t.forEach(i=>{if(i){const o=i.getName?i.getName():i.constructor?i.constructor.name:"Unknown Model";this.sceneObjects[o]={model:i,children:{}},i.getChildren&&typeof i.getChildren=="function"&&i.getChildren().forEach(n=>{if(n){const r=n.getName?n.getName():n.constructor?n.constructor.name:"Unknown Child";this.sceneObjects[o].children[r]={model:n}}})}}):this.sceneObjects=t||{},this.isVisible=!1,this.lastUpdateTime=0,this.updateInterval=500,this.createUI(),this.checkboxElements={},this.objectIdMap={},this.nameCountMap={},this.isUpdating=!1,this.renderSceneObjects(),this.setupKeyboardShortcut()}createUI(){this.container=document.createElement("div"),this.container.id="sceneEditor",this.container.style.position="absolute",this.container.style.top="50px",this.container.style.right="10px",this.container.style.width="300px",this.container.style.backgroundColor="rgba(0, 0, 0, 0.7)",this.container.style.color="white",this.container.style.padding="10px",this.container.style.borderRadius="5px",this.container.style.maxHeight="80vh",this.container.style.overflowY="auto",this.container.style.display="none",this.container.style.zIndex="100",this.container.style.fontFamily="Arial, sans-serif";const e=document.createElement("style");e.textContent=`
            .collapse-btn {
                cursor: pointer;
                user-select: none;
                margin-right: 5px;
                display: inline-block;
                width: 16px;
                height: 16px;
                text-align: center;
                line-height: 14px;
                border: 1px solid #555;
                border-radius: 2px;
                background-color: #333;
            }
            .collapse-btn:hover {
                background-color: #444;
            }
            .collapsed {
                display: none !important;
            }
            .object-label {
                cursor: pointer;
            }
            .object-row {
                display: flex;
                align-items: center;
            }
        `,document.head.appendChild(e);const t=document.createElement("div");t.style.display="flex",t.style.justifyContent="space-between",t.style.alignItems="center",t.style.marginBottom="10px";const i=document.createElement("h3");i.textContent="Scene Editor",i.style.margin="0";const o=document.createElement("button");o.textContent="X",o.style.background="none",o.style.border="none",o.style.color="white",o.style.cursor="pointer",o.style.fontSize="16px",o.addEventListener("click",()=>this.toggle());const s=document.createElement("div");s.style.display="flex",s.style.gap="10px";const n=document.createElement("button");n.textContent="Expand All",n.style.fontSize="11px",n.style.padding="2px 5px",n.style.backgroundColor="#333",n.style.color="white",n.style.border="1px solid #555",n.style.borderRadius="3px",n.style.cursor="pointer",n.addEventListener("click",()=>this.expandAll());const r=document.createElement("button");r.textContent="Collapse All",r.style.fontSize="11px",r.style.padding="2px 5px",r.style.backgroundColor="#333",r.style.color="white",r.style.border="1px solid #555",r.style.borderRadius="3px",r.style.cursor="pointer",r.addEventListener("click",()=>this.collapseAll()),s.appendChild(n),s.appendChild(r),t.appendChild(i),t.appendChild(s);const a=document.createElement("div");a.appendChild(o);const l=document.createElement("div");l.style.display="flex",l.style.justifyContent="space-between",l.style.alignItems="center",l.style.marginBottom="10px",l.appendChild(t),l.appendChild(a),this.objectListContainer=document.createElement("div"),this.objectListContainer.id="objectList",this.container.appendChild(l),this.container.appendChild(this.objectListContainer),document.body.appendChild(this.container),this.toggleButton=document.createElement("button"),this.toggleButton.id="sceneEditorToggle",this.toggleButton.textContent="Scene Editor",this.toggleButton.style.position="absolute",this.toggleButton.style.top="10px",this.toggleButton.style.right="10px",this.toggleButton.style.padding="5px 10px",this.toggleButton.style.borderRadius="5px",this.toggleButton.style.cursor="pointer",this.toggleButton.addEventListener("click",()=>this.toggle()),document.body.appendChild(this.toggleButton)}expandAll(){this.container.querySelectorAll(".object-children").forEach(t=>{t.classList.remove("collapsed");const o=t.parentElement.querySelector(".collapse-btn");o&&(o.textContent="-")})}collapseAll(){this.container.querySelectorAll(".object-children").forEach(t=>{t.classList.add("collapsed");const o=t.parentElement.querySelector(".collapse-btn");o&&(o.textContent="+")})}toggle(){if(this.isVisible=!this.isVisible,this.container.style.display=this.isVisible?"block":"none",this.isVisible){this.renderSceneObjects(),this.updateCheckboxStates();for(const[e,t]of Object.entries(this.sceneObjects))t.isVisible===!1&&this.checkboxElements[e]&&(this.checkboxElements[e].element.checked=!1,this.toggleObjectVisibility(e,t,!1));this.collapseAll()}}renderSceneObjects(){this.objectListContainer.innerHTML="",this.nameCountMap={};const e=document.createElement("div");e.className="scene-objects-tree";for(const[t,i]of Object.entries(this.sceneObjects)){const o=this.createObjectListItem(t,i);e.appendChild(o),i.isVisible===!1&&this.checkboxElements[t]&&(this.checkboxElements[t].element.checked=!1,this.toggleObjectVisibility(t,i,!1))}this.objectListContainer.appendChild(e)}getDisplayName(e,t,i=""){let o=e;if(t&&typeof t.getName=="function"?o=t.getName():t&&t.model&&typeof t.model.getName=="function"&&(o=t.model.getName()),!i)return o;const s=`${i}/${o}`;this.nameCountMap[s]||(this.nameCountMap[s]={count:0,instances:[]});const n=t.id||t.model&&t.model.id||t.uniqueId||Math.random().toString(36).substr(2,9);this.nameCountMap[s].instances.includes(n)||(this.nameCountMap[s].count++,this.nameCountMap[s].instances.push(n));const a=this.nameCountMap[s].instances.indexOf(n)+1;return this.nameCountMap[s].count>1&&(o=`${o} #${a}`),o}createObjectListItem(e,t,i=null,o=""){let s=this.getDisplayName(e,t,o);const n=o?`${o}/${e}`:e,r=document.createElement("div");r.className="scene-object-item",r.style.marginLeft="15px",r.style.marginBottom="8px";const a=document.createElement("div");a.className="object-row";const l=this.hasChildren(t);if(l){const u=document.createElement("span");u.className="collapse-btn",u.textContent="-",u.title="Collapse/Expand",u.onclick=R=>{R.stopPropagation();const b=r.querySelector(":scope > .object-children");if(b){const M=b.classList.contains("collapsed");b.classList.toggle("collapsed"),u.textContent=M?"-":"+"}},a.appendChild(u)}else{const u=document.createElement("span");u.style.display="inline-block",u.style.width="16px",u.style.marginRight="5px",a.appendChild(u)}const c=document.createElement("input");c.type="checkbox",c.style.marginRight="5px",c.checked=this.getObjectVisibility(t),typeof c.checked!="boolean"&&(c.checked=!0);const p=t.id||t.model&&t.model.id||null;c.setAttribute("data-object-path",n),p&&(c.setAttribute("data-object-id",p),this.objectIdMap[p]=t),c.addEventListener("change",()=>{const u=c.checked,R=c.getAttribute("data-object-path"),b=c.getAttribute("data-object-id");this.checkboxElements[R]={element:c,object:t,objectId:b},this.toggleObjectVisibility(R,t,u,b),this.updateNestedCheckboxes(R,u)}),this.checkboxElements[n]={element:c,object:t,objectId:p},a.appendChild(c);const f=document.createElement("span");f.style.display="flex",f.style.alignItems="center",f.style.flexGrow="1";const g=document.createElement("span");g.className="object-label",g.textContent=s,g.style.flexGrow="1",g.style.overflow="hidden",g.style.textOverflow="ellipsis",g.style.whiteSpace="nowrap",g.style.maxWidth="200px",this.isElementPermanentlyHidden(n,t)&&(g.style.color="#999",g.style.textDecoration="line-through",g.title="This element is permanently hidden"),p&&(g.title=`ID: ${p}
${g.title||""}`);const C=document.createElement("button");if(C.textContent="i",C.style.marginLeft="5px",C.style.width="16px",C.style.height="16px",C.style.background="#333",C.style.color="#fff",C.style.border="1px solid #555",C.style.borderRadius="50%",C.style.cursor="pointer",C.style.fontSize="10px",C.style.lineHeight="1",C.style.padding="0",C.title="Show info",C.addEventListener("click",u=>{u.stopPropagation(),typeof this.logModelInfo=="function"?(console.group(`Info for "${s}"`),this.logModelInfo(t),console.groupEnd()):(console.group(`Info for "${s}"`),console.log("Object:",t),t&&t.constructor&&console.log("Type:",t.constructor.name),p&&console.log("ID:",p),console.groupEnd())}),f.appendChild(g),f.appendChild(C),a.appendChild(f),r.appendChild(a),l){const u=document.createElement("div");u.className="object-children",u.style.marginLeft="15px",(t.pipes||t.panels)&&this.addModelChildren(u,t,n),t.model&&t.model.singleCuts&&this.addCompositeModelChildren(u,t,n),t.children&&Object.keys(t.children).length>0&&this.addChildrenObjects(u,t.children,n),r.appendChild(u)}return r}isElementPermanentlyHidden(e,t){return t&&t.isPermanentlyHidden===!0?!0:t&&typeof t.isPermanentlyHidden=="function"?t.isPermanentlyHidden():t&&t.model&&typeof t.model.isPermanentlyHidden=="function"?t.model.isPermanentlyHidden():!1}findParentObject(e){if(!e.includes("/"))return null;const t=e.substring(0,e.lastIndexOf("/"));return this.sceneObjects[t]||Object.values(this.sceneObjects).find(i=>i.model&&i.model.singleCuts&&i.model.singleCuts.length>0)}addModelChildren(e,t,i){t.pipes&&t.pipes.length>0&&(t.pipes.map(s=>s&&typeof s.getName=="function"?s.getName():"Pipe").forEach(s=>{}),t.pipes.forEach((s,n)=>{const r=`Pipe #${n+1}`,a=this.createObjectListItem(r,s,t,i);e.appendChild(a)})),t.panels&&t.panels.length>0&&(t.panels.map(s=>s&&typeof s.getName=="function"?s.getName():"Panel").forEach(s=>{}),t.panels.forEach((s,n)=>{const r=`Panel #${n+1}`,a=this.createObjectListItem(r,s,t,i);e.appendChild(a)}))}addCompositeModelChildren(e,t,i){if(!t.model||!t.model.singleCuts||!t.model.singleCuts.length)return;const o=t.model.singleCuts;o.forEach(s=>{s&&typeof s.getName=="function"&&s.getName()}),o.forEach((s,n)=>{const r=`Single CUT #${n+1}`,a=this.createObjectListItem(r,s,t,i);e.appendChild(a)})}addChildrenObjects(e,t,i){Object.entries(t).forEach(([o,s])=>{s&&typeof s.getName=="function"?s.getName():s&&s.model&&typeof s.model.getName=="function"&&s.model.getName()}),Object.entries(t).forEach(([o,s])=>{const n=this.createObjectListItem(o,s,null,i);e.appendChild(n)})}hasChildren(e){return e.pipes&&e.pipes.length>0||e.panels&&e.panels.length>0||e.children&&Object.keys(e.children).length>0||e.model&&e.model.singleCuts&&e.model.singleCuts.length>0||e.model&&e.model.childModels&&e.model.childModels.length>0}getObjectVisibility(e){return!e||e.isVisible===!1?!1:typeof e.isVisible=="function"?e.isVisible():e.model&&typeof e.model.isVisible=="function"?e.model.isVisible():e.rootNode&&typeof e.rootNode.isEnabled=="function"?e.rootNode.isEnabled():e.mesh&&typeof e.mesh.isVisible=="boolean"?e.mesh.isVisible:e.pipeMesh&&typeof e.pipeMesh.isVisible=="boolean"?e.pipeMesh.isVisible:e.panelMesh&&typeof e.panelMesh.isVisible=="boolean"?e.panelMesh.isVisible:!0}toggleObjectVisibility(e,t,i,o=null){console.log(`[SceneEditor] Toggling visibility of "${e}" ${o?`(ID: ${o})`:""} to ${i?"visible":"hidden"}`),o&&this.objectIdMap[o]&&(t=this.objectIdMap[o],console.log(`[SceneEditor] Using object from ID map for ${o}`)),this.setObjectVisibility(t,i,e),this.checkboxElements[e]&&(this.checkboxElements[e].element.checked=i)}updateNestedCheckboxes(e,t){var s,n;console.log(`Updating nested checkboxes for ${e} to ${t}`);const i=(s=this.checkboxElements[e])==null?void 0:s.object,o=(n=this.checkboxElements[e])==null?void 0:n.objectId;if(i){i.model&&(i.model.childModels&&i.model.childModels.length>0||i.model.children&&Object.keys(i.model.children).length>0);for(const[r,a]of Object.entries(this.checkboxElements))if(!a.isPermanentlyHidden&&(r.startsWith(e+"/")&&(console.log(`Setting child checkbox for ${r} to ${t}`),a.element.checked=t,this.toggleObjectVisibility(r,a.object,t,a.objectId)),o&&i.childModels)){const l=a.object;l&&i.childModels.some(p=>p.id===l.id||l.model&&p.id===l.model.id)&&(console.log(`Setting child checkbox for ${r} (matched by ID) to ${t}`),a.element.checked=t,this.toggleObjectVisibility(r,a.object,t,a.objectId))}}}updateCheckboxStates(){if(!this.isUpdating){this.isUpdating=!0;try{for(const[e,t]of Object.entries(this.checkboxElements))if(t.element&&t.object){const i=t.objectId&&this.objectIdMap[t.objectId]?this.objectIdMap[t.objectId]:t.object,o=this.getObjectVisibility(i);!this.desiredVisibilityState||this.desiredVisibilityState[e]===void 0?t.element.checked=o:t.element.checked=this.desiredVisibilityState[e]}}finally{this.isUpdating=!1}}}update(e){if(!this.isVisible)return;const t=e||Date.now();t-this.lastUpdateTime>this.updateInterval&&(this.updateCheckboxStates(),this.lastUpdateTime=t)}setupKeyboardShortcut(){window.addEventListener("keydown",e=>{e.code==="KeyE"&&this.toggle()})}setObjectVisibility(e,t,i=""){if(!e){console.log(`[SceneEditor] Object is null or undefined for path: ${i}`);return}const o=e.id||e.model&&e.model.id;if(i&&this.isElementPermanentlyHidden(i,e)){console.log(`[SceneEditor] Skipping permanently hidden element: ${i}${o?` (ID: ${o})`:""}`);return}if(console.log(`[SceneEditor] Setting visibility for ${i}${o?` (ID: ${o})`:""} to ${t?"visible":"hidden"}`),e.model&&typeof e.model.setVisible=="function"){console.log(`[SceneEditor] Setting visibility via object.model.setVisible for ${i}`),e.model.setVisible(t),typeof e.model.isVisible=="function"&&console.log(`[SceneEditor] After setting, object.model.isVisible(): ${e.model.isVisible()}`);return}if(typeof e.setVisible=="function"?(console.log(`[SceneEditor] Using setVisible method for ${e.constructor?e.constructor.name:"object"}`,t),e.setVisible(t),typeof e.isVisible=="function"&&console.log(`[SceneEditor] After setting, object.isVisible(): ${e.isVisible()}`)):e.rootNode&&e.rootNode.setEnabled?(console.log(`[SceneEditor] Setting root node enabled state to ${t}`),e.rootNode.setEnabled(t),e.rootNode.isEnabled&&console.log(`[SceneEditor] After setting, rootNode.isEnabled(): ${e.rootNode.isEnabled()}`)):e.mesh&&e.mesh.isVisible!==void 0?(console.log(`[SceneEditor] Setting mesh visibility to ${t}`),e.mesh.isVisible=t,console.log(`[SceneEditor] After setting, mesh.isVisible: ${e.mesh.isVisible}`)):e.pipeMesh&&e.pipeMesh.isVisible!==void 0?(console.log(`[SceneEditor] Setting pipe mesh visibility to ${t}`),e.pipeMesh.isVisible=t,console.log(`[SceneEditor] After setting, pipeMesh.isVisible: ${e.pipeMesh.isVisible}`)):e.panelMesh&&e.panelMesh.isVisible!==void 0?(console.log(`[SceneEditor] Setting panel mesh visibility to ${t}`),e.panelMesh.isVisible=t,e.rootNode&&(console.log(`[SceneEditor] Setting panel root node enabled state to ${t}`),e.rootNode.setEnabled(t)),e.panelMesh.refreshBoundingInfo(),console.log(`[SceneEditor] After setting, panelMesh.isVisible: ${e.panelMesh.isVisible}`)):(console.log(`[SceneEditor] No visibility method found for object at path: ${i}`),console.log("[SceneEditor] Object:",e)),console.log(`[SceneEditor] Processing children of ${i}${o?` (ID: ${o})`:""}`),e.childModels&&Array.isArray(e.childModels)&&(console.log(`[SceneEditor] Processing ${e.childModels.length} childModels for ${i}`),e.childModels.forEach((s,n)=>{const r=s.id?`${i}/ChildModel_${s.id.substring(0,8)}`:`${i}/ChildModel #${n+1}`;this.setObjectVisibility(s,t,r)})),e.model&&e.model.singleCuts&&(console.log(`[SceneEditor] Processing ${e.model.singleCuts.length} singleCuts for ${i}`),e.model.singleCuts.forEach((s,n)=>{const r=i?`${i}/Single CUT #${n+1}`:`Single CUT #${n+1}`;this.setObjectVisibility(s,t,r)})),e.childModels&&Array.isArray(e.childModels)&&(console.log(`[SceneEditor] Processing ${e.childModels.length} childModels for ${i}`),e.childModels.forEach((s,n)=>{const r=i?`${i}/ChildModel #${n+1}`:`ChildModel #${n+1}`;this.setObjectVisibility(s,t,r)})),e.pipes&&Array.isArray(e.pipes)&&(console.log(`[SceneEditor] Processing ${e.pipes.length} pipes for ${i}`),e.pipes.forEach((s,n)=>{const r=i?`${i}/Pipe #${n+1}`:`Pipe #${n+1}`;this.setObjectVisibility(s,t,r)})),e.panels&&Array.isArray(e.panels)&&(console.log(`[SceneEditor] Processing ${e.panels.length} panels for ${i}`),e.panels.forEach((s,n)=>{const r=i?`${i}/Panel #${n+1}`:`Panel #${n+1}`;this.setObjectVisibility(s,t,r)})),e.children&&typeof e.children=="object"){const s=Object.keys(e.children).length;console.log(`[SceneEditor] Processing ${s} generic children for ${i}`),Object.entries(e.children).forEach(([n,r])=>{const a=i?`${i}/${n}`:n;this.setObjectVisibility(r,t,a)})}}}class le{constructor(e={}){const t={isVisible:!0,maxLogEntries:50,textColor:"#ffffff",backgroundColor:"rgba(0, 0, 0, 0.7)",position:"top",cameraController:null};this.options={...t,...e},this.cameraController=this.options.cameraController,this.app=e.app||null,this.logs=[],this.createPanel(),this.createHTMLToggleButton(),console.log("DebugInfoView initialized - simple version")}createPanel(){try{if(console.log("Creating DebugInfoView panel"),this.controlPanels=document.getElementById("controlPanels"),!this.controlPanels){console.error("Control panels container not found");return}this.panel=document.createElement("div"),this.panel.id="debugInfoPanel",this.panel.style.backgroundColor=this.options.backgroundColor,this.panel.style.padding="10px",this.panel.style.borderRadius="5px",this.panel.style.color=this.options.textColor,this.panel.style.display=this.options.isVisible?"block":"none",this.panel.style.pointerEvents="auto",this.panel.style.maxWidth="400px",this.panel.style.maxHeight="300px",this.panel.style.overflowY="auto",this.panel.style.order="-1",this.updateCameraInfo(),this.controlPanels.firstChild?this.controlPanels.insertBefore(this.panel,this.controlPanels.firstChild):this.controlPanels.appendChild(this.panel),console.log("DebugInfoView panel created successfully")}catch(e){console.error("Error creating DebugInfoView panel:",e)}}updateCameraInfo(){if(!this.panel||!this.cameraController)return;this.panel.innerHTML="";const e=document.createElement("div");e.style.marginBottom="10px",e.style.display="flex",e.style.justifyContent="space-between",e.style.alignItems="center";const t=document.createElement("h3");t.textContent="Camera Debug Info",t.style.margin="0",t.style.fontSize="16px",e.appendChild(t),this.panel.appendChild(e);try{const i=document.createElement("div");i.style.backgroundColor="rgba(0, 0, 0, 0.3)",i.style.padding="10px",i.style.borderRadius="4px",i.style.marginBottom="10px";const o=this.cameraController.currentCamera,s=this.cameraController.currentMode,n=o.position,r=n.y,a=r/this.cameraController.maxPipeHeight*100;i.innerHTML=`
                <div style="font-weight: bold; font-size: 14px; margin-bottom: 5px;">
                    ${s}
                </div>
                <div style="margin-bottom: 5px;">
                    Position: X: ${n.x.toFixed(1)}, Y: ${n.y.toFixed(1)}, Z: ${n.z.toFixed(1)}
                </div>
                <div>
                    Height: ${r.toFixed(1)}m (${a.toFixed(1)}%)
                </div>
            `,this.panel.appendChild(i)}catch(i){const o=document.createElement("div");o.style.color="#ff5555",o.textContent=`Error getting camera info: ${i.message}`,this.panel.appendChild(o)}}createHTMLToggleButton(){try{console.log("Creating debug info toggle button");let e=document.getElementById("toggleButtons");e||(e=document.getElementById("controlButtons")),e||(e=document.querySelector(".control-buttons-container")),e||(console.error("Control buttons container not found, creating new one"),e=document.createElement("div"),e.id="toggleButtons",e.style.position="absolute",e.style.bottom="20px",e.style.right="20px",e.style.display="flex",e.style.flexDirection="row",e.style.gap="10px",e.style.zIndex="100",document.body.appendChild(e));const t=document.createElement("button");t.id="debugInfoToggle",t.textContent="Debug",t.className="control-button",t.style.backgroundColor=this.options.isVisible?"#4CAF50":"#444444",t.style.color="#fff",t.style.border="none",t.style.padding="8px 16px",t.style.borderRadius="4px",t.style.cursor="pointer",t.style.fontWeight="bold",t.style.width="120px",t.style.textAlign="center",t.style.transition="background-color 0.3s",t.style.boxShadow="0 2px 4px rgba(0,0,0,0.3)",t.addEventListener("mouseover",()=>{t.style.backgroundColor=this.options.isVisible?"#45a049":"#555555"}),t.addEventListener("mouseout",()=>{t.style.backgroundColor=this.options.isVisible?"#4CAF50":"#444444"}),t.addEventListener("click",()=>{this.toggleVisible()}),e.appendChild(t),this.toggleButton=t,console.log("Debug info toggle button created successfully")}catch(e){console.error("Error creating debug info toggle button:",e)}}toggleVisible(){this.options.isVisible=!this.options.isVisible,this.toggleButton&&(this.toggleButton.style.backgroundColor=this.options.isVisible?"#4CAF50":"#444444"),this.panel&&(this.panel.style.display=this.options.isVisible?"block":"none"),console.log(`Debug info visibility toggled: ${this.options.isVisible}`)}update(){this.options.isVisible&&this.panel&&this.updateCameraInfo()}dispose(){this.toggleButton&&this.toggleButton.parentNode&&this.toggleButton.parentNode.removeChild(this.toggleButton),this.panel&&this.panel.parentNode&&this.panel.parentNode.removeChild(this.panel)}}class de{constructor(e=[],t={}){const i={isVisible:!0,textColor:"#ffffff",backgroundColor:"rgba(0, 0, 0, 0.7)",position:"top",sliderWidth:"200px",inputWidth:"60px",includeChildren:!0};this.options={...i,...t},this.models=e,this.radiusModels=[],this.findRadiusModels(),this.createPanel(),this.createHTMLToggleButton(),console.log("RadiusControl initialized with",this.radiusModels.length,"radius-controllable models")}findRadiusModels(){this.radiusModels=[],Array.isArray(this.models)&&this.models.forEach(e=>{if(this.addModelIfHasRadius(e),this.options.includeChildren&&e&&typeof e.getChildren=="function")try{const t=e.getChildren();Array.isArray(t)&&t.forEach(i=>{this.addModelIfHasRadius(i)})}catch(t){console.error("Error getting children for model:",t)}}),console.log("Found",this.radiusModels.length,"models with radius controls")}addModelIfHasRadius(e){if(e&&typeof e.getRadius=="function")try{const t=e.getRadius();t&&typeof t.value<"u"&&this.radiusModels.push({model:e,name:e.getName?e.getName():e.constructor.name,radius:t})}catch(t){console.error("Error checking radius for model:",t)}}createPanel(){try{if(console.log("Creating RadiusControl panel"),this.controlPanels=document.getElementById("controlPanels"),!this.controlPanels){console.error("Control panels container not found");return}this.panel=document.createElement("div"),this.panel.id="radiusControlPanel",this.panel.style.backgroundColor=this.options.backgroundColor,this.panel.style.padding="10px",this.panel.style.borderRadius="5px",this.panel.style.color=this.options.textColor,this.panel.style.display=this.options.isVisible?"block":"none",this.panel.style.pointerEvents="auto",this.panel.style.maxWidth="400px",this.panel.style.maxHeight="400px",this.panel.style.overflowY="auto";const e=document.createElement("div");e.style.marginBottom="10px",e.style.display="flex",e.style.justifyContent="space-between",e.style.alignItems="center";const t=document.createElement("h3");t.textContent="Radius Control",t.style.margin="0",e.appendChild(t),this.panel.appendChild(e),this.radiusModels.length>1&&this.createModelSelector(),this.createRadiusControls(),this.controlPanels.appendChild(this.panel),console.log("RadiusControl panel created successfully")}catch(e){console.error("Error creating RadiusControl panel:",e)}}createModelSelector(){const e=document.createElement("div");e.style.marginBottom="15px";const t=document.createElement("label");t.textContent="Select Model: ",t.style.marginRight="10px",e.appendChild(t),this.modelSelector=document.createElement("select"),this.modelSelector.style.padding="5px",this.modelSelector.style.backgroundColor="#333",this.modelSelector.style.color="#fff",this.modelSelector.style.border="1px solid #555",this.modelSelector.style.borderRadius="4px",this.radiusModels.forEach((i,o)=>{const s=document.createElement("option");s.value=o,s.textContent=i.name,this.modelSelector.appendChild(s)}),this.modelSelector.addEventListener("change",()=>{this.updateRadiusControls()}),e.appendChild(this.modelSelector),this.panel.appendChild(e)}createRadiusControls(){const e=document.createElement("div");if(e.id="radiusControlsContainer",this.radiusModels.length>0){this.radiusValueContainer=document.createElement("div"),this.radiusValueContainer.style.marginBottom="10px";const t=document.createElement("div");t.style.display="flex",t.style.alignItems="center",t.style.marginBottom="15px";const i=document.createElement("label");i.textContent="Radius: ",i.style.marginRight="10px",i.style.minWidth="60px",t.appendChild(i),this.radiusSlider=document.createElement("input"),this.radiusSlider.type="range",this.radiusSlider.min=0,this.radiusSlider.max=100,this.radiusSlider.step=.01,this.radiusSlider.style.width=this.options.sliderWidth,this.radiusSlider.style.marginRight="10px",t.appendChild(this.radiusSlider),this.radiusInput=document.createElement("input"),this.radiusInput.type="number",this.radiusInput.style.width=this.options.inputWidth,this.radiusInput.style.padding="5px",this.radiusInput.style.backgroundColor="#333",this.radiusInput.style.color="#fff",this.radiusInput.style.border="1px solid #555",this.radiusInput.style.borderRadius="4px",this.radiusInput.step=.01,t.appendChild(this.radiusInput),this.radiusSlider.addEventListener("input",o=>{this.onSliderChange(parseFloat(o.target.value))}),this.radiusInput.addEventListener("change",o=>{this.onInputChange(parseFloat(o.target.value))}),e.appendChild(this.radiusValueContainer),e.appendChild(t),this.selectedModelIndex=0,this.updateRadiusControls()}else{const t=document.createElement("p");t.textContent="No models with radius controls found.",e.appendChild(t)}this.panel.appendChild(e)}updateRadiusControls(){const e=this.modelSelector?parseInt(this.modelSelector.value):0;if(this.selectedModelIndex=e,e>=0&&e<this.radiusModels.length){const t=this.radiusModels[e],i=t.radius;this.radiusValueContainer.textContent=`Model: ${t.name} (${parseFloat(i.value.toFixed(2))})`,this.radiusSlider.min=i.min||0,this.radiusSlider.max=i.max||100,this.radiusSlider.value=i.value,this.radiusInput.min=i.min||0,this.radiusInput.max=i.max||100,this.radiusInput.value=parseFloat(i.value.toFixed(2))}}onSliderChange(e){if(this.selectedModelIndex>=0&&this.selectedModelIndex<this.radiusModels.length){const i=this.radiusModels[this.selectedModelIndex].radius,o=parseFloat(e.toFixed(2));i.value=o,this.radiusInput.value=o}}onInputChange(e){if(this.selectedModelIndex>=0&&this.selectedModelIndex<this.radiusModels.length){const i=this.radiusModels[this.selectedModelIndex].radius,o=parseFloat(this.radiusSlider.min),s=parseFloat(this.radiusSlider.max),n=Math.max(o,Math.min(s,e)),r=parseFloat(n.toFixed(2));i.value=r,this.radiusSlider.value=r,r!==e&&(this.radiusInput.value=r)}}createHTMLToggleButton(){try{console.log("Creating radius control toggle button");let e=document.getElementById("toggleButtons");e||(e=document.getElementById("controlButtons")),e||(e=document.querySelector(".control-buttons-container")),e||(console.error("Toggle buttons container not found, creating new one"),e=document.createElement("div"),e.id="toggleButtons",e.style.position="absolute",e.style.bottom="20px",e.style.right="20px",e.style.display="flex",e.style.flexDirection="row",e.style.gap="10px",e.style.zIndex="100",document.body.appendChild(e));const t=document.createElement("button");t.id="radiusControlToggle",t.textContent="Radius",t.className="control-button",t.style.backgroundColor=this.options.isVisible?"#4CAF50":"#444444",t.style.color="#fff",t.style.border="none",t.style.padding="8px 16px",t.style.borderRadius="4px",t.style.cursor="pointer",t.style.fontWeight="bold",t.style.width="120px",t.style.textAlign="center",t.style.transition="background-color 0.3s",t.style.boxShadow="0 2px 4px rgba(0,0,0,0.3)",t.addEventListener("mouseover",()=>{t.style.backgroundColor=this.options.isVisible?"#45a049":"#555555"}),t.addEventListener("mouseout",()=>{t.style.backgroundColor=this.options.isVisible?"#4CAF50":"#444444"}),t.addEventListener("click",()=>{this.toggleVisible()}),e.appendChild(t),this.toggleButton=t,console.log("Radius control toggle button created successfully")}catch(e){console.error("Error creating radius control toggle button:",e)}}toggleVisible(){this.options.isVisible=!this.options.isVisible,this.toggleButton&&(this.toggleButton.style.backgroundColor=this.options.isVisible?"#4CAF50":"#444444"),this.panel&&(this.panel.style.display=this.options.isVisible?"block":"none")}update(){this.options.isVisible&&this.selectedModelIndex!==void 0&&this.updateRadiusControls()}}class ce{constructor(e,t){this.scene=e,this.engine=t,this.currentQuality="auto",this.qualityLevels={low:{hardwareScalingLevel:2,particlesEnabled:!1,shadowsEnabled:!1,postProcessesEnabled:!1,tessellation:8,antialias:!1},medium:{hardwareScalingLevel:1.5,particlesEnabled:!0,shadowsEnabled:!1,postProcessesEnabled:!0,tessellation:12,antialias:!1},high:{hardwareScalingLevel:1,particlesEnabled:!0,shadowsEnabled:!0,postProcessesEnabled:!0,tessellation:24,antialias:!0}},this.detectAndSetQuality()}detectAndSetQuality(){let e="medium";const t=/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent),i=navigator.deviceMemory!==void 0&&navigator.deviceMemory<4,o=window.navigator.hardwareConcurrency!==void 0&&window.navigator.hardwareConcurrency<4,n=this.engine.getCaps().maxTextureSize||0;t||i||o||n<4096?e="low":n>=8192&&!t&&!i&&!o&&(e="high"),console.log(`Auto-detected quality level: ${e}`),this.setQuality(e)}setQuality(e){if(e==="auto"){this.detectAndSetQuality();return}if(!this.qualityLevels[e]){console.error(`Unknown quality level: ${e}`);return}const t=this.qualityLevels[e];return this.currentQuality=e,console.log(`Setting quality to ${e}`,t),this.engine.setHardwareScalingLevel(t.hardwareScalingLevel),this.scene.particlesEnabled=t.particlesEnabled,this.scene.shadowsEnabled=t.shadowsEnabled,this.scene.postProcessesEnabled=t.postProcessesEnabled,this.optimizeScene(e),e}optimizeScene(e){const t={low:30,medium:45,high:60}[e]||30,i=new W(t);i.optimizations.length=0,e==="low"&&(i.hardwareScalingLevel=2,i.trackerDuration=1e3),this.scene.optimizer&&this.scene.optimizer.dispose(),this.scene.optimizer=new Q(this.scene,i)}getQualityLevel(){return this.currentQuality}}class he{constructor(){this.startTime=performance.now(),this.markers={start:this.startTime},this.durations={},console.log(`[PERF] Starting performance measurement at ${new Date().toISOString()}`)}mark(e){const t=performance.now();this.markers[e]=t;const i=t-this.startTime;this.durations[e]=i,console.log(`[PERF] ${e}: ${i.toFixed(2)}ms`)}getSummary(){return{markers:this.markers,durations:this.durations,totalTime:this.durations.complete||performance.now()-this.startTime}}logSummary(){var t,i,o;const e=this.durations.complete||performance.now()-this.startTime;return console.group("%c[PERFORMANCE SUMMARY]","color: #4CAF50; font-weight: bold;"),console.log(`%cTotal load time: ${e.toFixed(2)}ms`,"font-weight: bold;"),Object.keys(this.durations).forEach(s=>{const n=(this.durations[s]/e*100).toFixed(1);console.log(`${s}: ${this.durations[s].toFixed(2)}ms (${n}%)`)}),console.log(`
Environment:`),console.log(`User Agent: ${navigator.userAgent}`),console.log(`CPU Cores: ${navigator.hardwareConcurrency||"unknown"}`),console.log(`Memory: ${navigator.deviceMemory?navigator.deviceMemory+"GB":"unknown"}`),console.log(`Date: ${new Date().toISOString()}`),console.log(`Quality Level: ${((o=(i=(t=window.cheDebug)==null?void 0:t.app)==null?void 0:i.qualityController)==null?void 0:o.currentQuality)||"unknown"}`),console.groupEnd(),e}}class ue{constructor(){this.performanceTracker=new he,this.init()}async init(){try{const{engine:e,canvas:t}=await K();this.engine=e,this.canvas=t,this.performanceTracker.mark("engineInitialized");const{scene:i,shadowGenerator:o,axesViewer:s}=Y(e);this.scene=i,this.shadowGenerator=o,this.axesViewer=s,this.performanceTracker.mark("sceneCreated"),this.cameraController=new ne(i,t,{initialPosition:new d(0,1e3,200),zoomScaling:5,minDistance:20,maxDistance:3e3}),this.performanceTracker.mark("cameraCreated"),this.groundModel=new X(i,2e3),this.ringModel=new se(i,new d(0,0,0),{debug:!0}),this.performanceTracker.mark("ringModelCreated"),this.starModel=null,this.performanceTracker.mark("starModelCreated"),this.onRender(),this.performanceTracker.mark("modelsInitialized");const n=[this.ringModel];this.sceneEditor=new ae(i,n),this.uiController=new re(this.cameraController,{scene:this.scene,models:[this.ringModel],sceneEditor:this.sceneEditor,showDebugInfo:!0,showRadiusControl:!0,app:this,controlClasses:{DebugInfoView:le,RadiusControl:de},showOnlyDebugToggle:!0}),this.performanceTracker.mark("uiCreated"),this.debugInfoView=this.uiController.debugInfoView,this.qualityController=new ce(this.scene,this.engine),i.registerBeforeRender(()=>{const r=this.scene.activeCamera.position;this.ringModel.updateLOD(r),this.sceneEditor&&this.sceneEditor.update(),this.uiController&&this.uiController.update()}),this.startRenderLoop(),this.performanceTracker.mark("renderLoopStarted"),requestAnimationFrame(()=>{this.performanceTracker.mark("firstFrameRendered"),requestAnimationFrame(()=>{this.performanceTracker.mark("complete");const r=this.performanceTracker.logSummary();console.log(`%cCHE Visualization loaded in ${r.toFixed(2)}ms`,"color: #4CAF50; font-size: 14px; font-weight: bold;")})}),console.log("Initialization complete")}catch(e){this.performanceTracker.mark("error"),console.error("Initialization error:",e),this.showError(`Initialization error: ${e.message}`)}}startRenderLoop(){this.engine.runRenderLoop(()=>{this.scene&&this.scene.render()}),window.cheDebug={app:this,models:{ringModel:this.ringModel,starModel:null},getStats:()=>this.ringModel?{cameraMode:this.cameraController?this.cameraController.currentMode:"unknown",fps:this.engine?this.engine.getFps().toFixed():"unknown",ringModel:{childCount:this.ringModel.childModels?this.ringModel.childModels.length:0,layerOneRadius:this.ringModel.layerOneRing&&this.ringModel.layerOneRing.options?this.ringModel.layerOneRing.options.radius.toFixed(1):"unknown",layerTwoRadius:this.ringModel.layerTwoRing&&this.ringModel.layerTwoRing.options?this.ringModel.layerTwoRing.options.radius.toFixed(1):"unknown",layerThreeRadius:this.ringModel.layerThreeRing&&this.ringModel.layerThreeRing.options?this.ringModel.layerThreeRing.options.radius.toFixed(1):"unknown",layerFourRadius:this.ringModel.layerFourRing&&this.ringModel.layerFourRing.options?this.ringModel.layerFourRing.options.radius.toFixed(1):"unknown",layerFiveRadius:this.ringModel.layerFiveRing&&this.ringModel.layerFiveRing.options?this.ringModel.layerFiveRing.options.radius.toFixed(1):"unknown"},starModel:"Not loaded"}:"Models not initialized yet",getPerformance:()=>this.performanceTracker?this.performanceTracker.getSummary():"Performance tracking not available",forceUpdatePositions:()=>{if(console.log("Forcing complete recalculation of all positions..."),this.ringModel&&typeof this.ringModel.updateRadiusSettings=="function"){const e=this.ringModel.layerFiveRing&&this.ringModel.layerFiveRing.options?this.ringModel.layerFiveRing.options.radius:182,t=this.ringModel.options?this.ringModel.options.singleCutRadius:21;this.ringModel.updateRadiusSettings(e,t),console.log(`Updated Ring Model positions with outer radius=${e}`)}return"Force updated all model positions"},setQuality:e=>this.qualityController?(this.qualityController.setQuality(e),`Quality set to: ${e}`):"Quality controller not initialized",help:()=>{console.log(`
CHE Visualization Debug Console Commands:
----------------------------------------
cheDebug.getStats() - Get basic statistics about models
cheDebug.getPerformance() - Get performance timing data
cheDebug.forceUpdatePositions() - Force complete recalculation and update of positions
cheDebug.setQuality(level) - Set quality level ('low', 'medium', 'high', 'auto')
cheDebug.models - Access all models directly
cheDebug.app - Access the main application instance
`)}},console.log("%c CHE Visualization Debug Tools Available","background: #222; color: #bada55; font-size: 14px; padding: 5px;"),console.log("%c Use cheDebug.help() for available commands","color: #bada55;")}showError(e){const t=document.createElement("div");t.style.position="absolute",t.style.top="50%",t.style.left="50%",t.style.transform="translate(-50%, -50%)",t.style.backgroundColor="rgba(255, 0, 0, 0.7)",t.style.color="white",t.style.padding="20px",t.style.borderRadius="5px",t.style.zIndex="1000",t.innerHTML=`
            <h3>Error</h3>
            <p>${e}</p>
            <p>Please check your browser console for more details.</p>
            <div id="webglInfo"></div>
        `,document.body.appendChild(t);const i=document.getElementById("webglInfo");try{const o=document.createElement("canvas"),s=o.getContext("webgl")||o.getContext("experimental-webgl");if(s){const n=s.getExtension("WEBGL_debug_renderer_info"),r=n?s.getParameter(n.UNMASKED_RENDERER_WEBGL):"Unknown";i.innerHTML=`<p>WebGL Renderer: ${r}</p>`}else i.innerHTML="<p>WebGL not available in your browser</p>"}catch(o){i.innerHTML=`<p>Could not get WebGL information: ${o.message}</p>`}}onRender(){console.log("Initializing models after scene setup");const e=t=>{t&&typeof t.onRender=="function"&&t.onRender(),t&&t.childModels&&Array.isArray(t.childModels)&&t.childModels.forEach(i=>{e(i)})};this.ringModel&&e(this.ringModel),console.log("Model initialization complete")}}document.addEventListener("DOMContentLoaded",()=>{new ue});
